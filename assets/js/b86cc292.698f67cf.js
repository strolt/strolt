"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),m=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(n),d=o,g=p["".concat(i,".").concat(d)]||p[d]||u[d]||s;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var m=2;m<s;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:3},a="Examples",l={unversionedId:"strolt/configuration/examples",id:"strolt/configuration/examples",title:"Examples",description:"Example1",source:"@site/docs/strolt/configuration/examples.md",sourceDirName:"strolt/configuration",slug:"/strolt/configuration/examples",permalink:"/docs/strolt/configuration/examples",draft:!1,editUrl:"https://github.com/strolt/strolt/edit/main/website/docs/strolt/configuration/examples.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"telegram",permalink:"/docs/strolt/configuration/drivers/notification/telegram"},next:{title:"ENV",permalink:"/docs/strolt/configuration/env"}},i={},m=[{value:"Example1",id:"example1",level:2},{value:"Example2",id:"example2",level:2}],c={toc:m},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"example1"},"Example1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=strolt.yml",title:"strolt.yml"},"")),(0,o.kt)("h2",{id:"example2"},"Example2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=strolt.yml",title:"strolt.yml"},'timezone: America/New_York\n\ntags:\n  - tag1:value\n  - tag2:value\n  - tag3:value\n\nservices:\n  example:\n    database:\n      tags:\n        - taskTag\n      schedule:\n        backup: "0 0 * * *"\n        prune: "0 20 * * *"\n      source:\n        driver: pg\n        config:\n          host: "{{.PG_HOST}}"\n          database: "{{.PG_DATABASE}}"\n          username: "{{.PG_USER}}"\n          password: "{{.PG_PASSWORD}}"\n      destinations:\n        restic-postgres:\n          extends: minio_restic\n          env:\n            RESTIC_PASSWORD: "{{.RESTIC_PASSWORD}}"\n            RESTIC_REPOSITORY: "s3:{{.MINIO_S3_URL}}/EXAMPLE2/restic-postgres"\n      notifications:\n        - telegram\n        - errors\n\nsecrets:\n  RESTIC_PASSWORD: password\n\n  PG_HOST: postgres\n  PG_DATABASE: strolt\n  PG_USER: strolt_user\n  PG_PASSWORD: strolt_password\n\nextends:\n  secrets:\n    - ./strolt.secrets.yml\n  configs:\n    - ./strolt.base.yml\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=strolt.base.yml",title:"strolt.base.yml"},'definitions:\n  notifications:\n    telegram:\n      driver: telegram\n      config:\n        token: "{{.TELEGRAM_TOKEN}}"\n        chatId: "{{.TELEGRAM_CHAT_ID}}"\n    errors:\n      driver: telegram\n      config:\n        token: "{{.TELEGRAM_TOKEN}}"\n        chatId: "{{.TELEGRAM_CHAT_ID}}"\n      events:\n        - OPERATION_ERROR\n        - SOURCE_ERROR\n        - DESTINATION_ERROR\n\n  destinations:\n    minio_restic:\n      driver: restic\n      config:\n        keep:\n          last: 3\n      env:\n        AWS_ACCESS_KEY_ID: "{{.MINIO_S3_ACCESS_KEY_ID}}"\n        AWS_SECRET_ACCESS_KEY: "{{.MINIO_S3_SECRET_ACCESS_KEY}}"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=strolt.secrets.yml",title:"strolt.secrets.yml"},"MINIO_S3_URL: http://minio:9000\nMINIO_S3_ACCESS_KEY_ID: minioadmin\nMINIO_S3_SECRET_ACCESS_KEY: minioadmin\n\nTELEGRAM_TOKEN: 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\nTELEGRAM_CHAT_ID: 1234567890\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=docker-compose.yml",title:"docker-compose.yml"},"services:\n  minio:\n    image: minio/minio:RELEASE.2022-08-13T21-54-44Z\n    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data\n    ports:\n      - 9000:9000\n      - 9001:9001\n    volumes:\n      - minio:/data\n    environment:\n      MINIO_ROOT_USER: minioadmin\n      MINIO_ROOT_PASSWORD: minioadmin\n    networks:\n      - strolt_network\n\n  postgres:\n    image: postgres:13.2-alpine\n    environment:\n      TZ: UTC\n      POSTGRES_DB: strolt\n      POSTGRES_PASSWORD: strolt_password\n      POSTGRES_USER: strolt_user\n    volumes:\n      - postgres:/var/lib/postgresql/data\n    networks:\n      - strolt_network\n\n  strolt:\n    image: strolt/strolt:latest\n    depends_on:\n      - postgres\n    restart: always\n    environment:\n      - STROLT_GLOBAL_TAGS=postgres:13.2-alpine\n    volumes:\n      - ./strolt.yml:/strolt/config.yml:ro\n      - ./strolt.secrets.yml:/strolt/strolt.secrets.yml:ro\n      - ./strolt.base.yml:/strolt/strolt.base.yml:ro\n    networks:\n      - strolt_network\n\nnetworks:\n  strolt_network:\n\nvolumes:\n  minio:\n  postgres:\n")))}u.isMDXComponent=!0}}]);